max product in subarray
//Bruce Force Way

class Solution {
    public int maxProduct(int[] nums) {
        int len = nums.length;
        if(len <= 1) return nums[0];
        int max = Integer.MIN_VALUE;
        for(int i = 0; i < len; i++){
            int product = nums[i] == 0 ? 1 : nums[i];
            for(int j = i+1; j < len; j++){
                product *= nums[j];
                if(product > max){
                    max = product;
                }
                
            }
            if(nums[i] > max) max = nums[i];
        }
        return max;
    }
}

//Kandane's Algorithm Way
class Solution {
    public int maxProduct(int[] nums) {
        int len = nums.length;
        int left = 0, right = 0;
        int max = nums[0];
        for(int i = 0; i < len; i++){
            left = (left == 0 ? 1 : left) * nums[i];
            right = (right == 0 ? 1 : right) * nums[len-1-i];
            max = Math.max(max, Math.max(left,right));
        }
        return max;
    }
}